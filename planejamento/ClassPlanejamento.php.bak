<?php 
 /**
 * Portal de Compras
 * Programa: CadIncluirDFD.php
 * Autor: Diógenes Dantas | Madson Felix
 * Data: 17/11/2022
 * Objetivo: Programa para inclusão de DFD
 * Tarefa Redmine: #275243
 * -------------------------------------------------------------------
  * Alterado: Osmar Celestino
  * Data: 20/12/2022
  * Tarefa: 276459
  * -------------------------------------------------------------------
  */

# Executa o controle de segurança	#
session_start();

# Acesso ao arquivo de funções #
require_once "../funcoes.php";

Class Planejamento {

    public $conexaoDb;

    public function __construct() {
        $this->conexaoDb = conexao();
    }

    //Função utilizada em CadIncluirDFD.php
    //Verifica se não é SQL Injection
    public function anti_injection($sql)
    {
        // remove palavras que contenham sintaxe sql
        preg_match("/(from|select|insert|delete|where|drop table|show tables|#|\*|--|\\\\)/",$sql,$matches);
        $sql = @preg_replace($matches,"",$sql);
        $sql = trim($sql);//limpa espaços vazio
        $sql = strip_tags($sql);//tira tags html e php
        $sql = addslashes($sql);//Adiciona barras invertidas a uma string
        return $sql;
    }

    //Função utilizada em CadIncluirDFD.php
    //Busca os Orgãos de centro de custo vinculado ao usuário
    public function getOrgao()
    {
        $cusupocodi = $_SESSION['_cusupocodi_'];
        $sql  = "SELECT DISTINCT	org.corglicodi, org.eorglidesc, org.aorglicnpj  ";
        $sql .= " FROM	sfpc.tborgaolicitante org "; 
        $sql .= " INNER JOIN sfpc.tbcentrocustoportal AS CentroCusto ON (org.corglicodi = CentroCusto.corglicodi) ";
        $sql .= " INNER JOIN      sfpc.tbusuariocentrocusto AS UsuarioCusto ON (UsuarioCusto.ccenposequ = CentroCusto.ccenposequ) ";
        $sql .= " WHERE			org.forglisitu = 'A' ";
        $sql .= " AND UsuarioCusto.cusupocodi = $cusupocodi AND UsuarioCusto.fusucctipo = 'C' ";
        $sql .= " ORDER BY		org.eorglidesc ASC";
        $resultado = executarSQL($this->conexaoDb, $sql);
        $dados = array();
        while($resultado->fetchInto($retorno, DB_FETCHMODE_OBJECT)) {
            $dados[] = $retorno;
        }
        return $dados;
    }
    //Função utilizada em CadIncluirDFD.php
    //traz Centro de custo especifico
    public function getCenCustoUsuario($corglicodi)
    {
        $cusupocodi = $_SESSION['_cusupocodi_'];
        $sql  = " SELECT DISTINCT CentroCusto.ccenposequ, CentroCusto.ccenpocorg, CentroCusto.ccenpounid ";
        $sql .= " FROM	sfpc.tborgaolicitante org "; 
        $sql .= " INNER JOIN sfpc.tbcentrocustoportal AS CentroCusto ON (org.corglicodi = CentroCusto.corglicodi) ";
        $sql .= " INNER JOIN      sfpc.tbusuariocentrocusto AS UsuarioCusto ON (UsuarioCusto.ccenposequ = CentroCusto.ccenposequ) ";
        $sql .= " WHERE			org.forglisitu = 'A' ";
        $sql .= " AND UsuarioCusto.cusupocodi = $cusupocodi AND org.corglicodi = $corglicodi AND UsuarioCusto.fusucctipo = 'C' ";
        $sql .= " ORDER BY	CentroCusto.ccenposequ, CentroCusto.ccenpocorg, CentroCusto.ccenpounid  ASC";
        
        $resultado = executarSQL($this->conexaoDb, $sql);
        $dados = array();
        while($resultado->fetchInto($retorno, DB_FETCHMODE_OBJECT)) {
            $dados[] = $retorno;
        }
        
        return $dados;
    }

    //Função utilizada em CadIncluirDFD.php
    //Busca a classe de material ou serviço
    public function pesquisaClasseMatServ($tipoDePesquisa, $opcaoDePesquisa, $dadoAPesquisar)
    {
        $sql = "
            select cms.cclamscodi, cms.eclamsdesc, cms.cgrumscodi, serv.cservpsequ, serv.eservpdesc, mat.cmatepsequ, mat.ematepdesc, unid.eunidmsigl 
            from sfpc.tbclassematerialservico cms
            left join sfpc.tbservicoportal serv on cms.cclamscodi = serv.cclamscodi and cms.cgrumscodi = serv.cgrumscodi 
            left join sfpc.tbsubclassematerial sub on cms.cclamscodi = sub.cclamscodi and cms.cgrumscodi = sub.cgrumscodi 
            inner join sfpc.tbmaterialportal mat on sub.csubclsequ = mat.csubclsequ
            inner join sfpc.tbunidadedemedida unid on unid.cunidmcodi = mat.cunidmcodi
            where
            cms.fclamssitu = 'A'
        ";

        switch($tipoDePesquisa) {
            case "ClasseDescricaoDireta":
                if($opcaoDePesquisa == "0") {
                    $sql .= "and cms.cclamscodi = $dadoAPesquisar";
                }else if($opcaoDePesquisa == "1") {
                    $sql .= "and cms.eclamsdesc like '%$dadoAPesquisar%'";
                }else if($opcaoDePesquisa == "2") {
                    $sql .= "and cms.eclamsdesc like '$dadoAPesquisar%'";
                }
                break;
            case "MaterialDescricaoDireta":
                if($opcaoDePesquisa == "0") {
                    $sql .= "and mat.cmatepsequ = $dadoAPesquisar"; 
                }else if($opcaoDePesquisa == "1") {
                    $sql .= "and mat.ematepcomp like '%$dadoAPesquisar%'"; 
                }else if($opcaoDePesquisa == "2") {
                    $sql .= "and mat.ematepcomp like '$dadoAPesquisar%'";
                }   
                break;
            case "OpcaoPesquisaServico":
                if($opcaoDePesquisa == "0") {
                   $sql .= "and serv.cservpsequ = $dadoAPesquisar";
                }else if($opcaoDePesquisa == "1") {
                   $sql .= "and serv.eservpdesc like '%$dadoAPesquisar%'";
                }else if($opcaoDePesquisa == "2") {
                   $sql .= "and serv.eservpdesc like '$dadoAPesquisar%'";
                }
                break;
        }
        
        $resultado = executarSQL($this->conexaoDb, $sql);
        $dados = array();
        while($resultado->fetchInto($retorno, DB_FETCHMODE_OBJECT)) {
            $dados[] = $retorno;
        }
        
        return $dados;
    }

    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Lista um array com os status da situação do DFD;
     */
    public function getSituacaoDFD()
    {
        $sqlSitDFD = "
            SELECT CPLSITCODI, EPLSITNOME
            FROM SFPC.TBPLANEJAMENTOSITUACAODFD
            ORDER BY EPLSITNOME ASC 
        ";

        $resultado = executarSQL($this->conexaoDb, $sqlSitDFD);
        $dadosSit = array();

        while ($resultado->fetchInto($retornoSit, DB_FETCHMODE_OBJECT)) {
            $dadosSit[] = $retornoSit;
        }

        return $dadosSit;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Adiciona os traços e pontos em CPF ou CNPJ
     */
    public function MascarasCPFCNPJ($valor) {
        $checaSeFormatado = strripos($valor, "-");
        if($checaSeFormatado == true) {
            return $valor;
        }
        if(strlen($valor) == 11) {
            $mascara = "###.###.###-##";
            for($i =0; $i <= strlen($mascara); $i++) {
                if($mascara[$i] == "#") {
                    if(isset($valor[$k])){
                       $maskared .= $valor[$k++];
                    }
                }else {
                    $maskared .= $mascara[$i];
                }
            }

            return $maskared;
        }
        if(strlen($valor) == 14) {
            $mascara = "##.###.###/####-##";
            for($i =0; $i <= strlen($mascara); $i++) {
                if($mascara[$i] == "#") {
                    if(isset($valor[$k])){
                       $maskared .= $valor[$k++];
                    }
                }else {
                    $maskared .= $mascara[$i];
                }
            }

            // var_dump($maskared);
            return $maskared;
        }
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Gera um novo sequencial do DFD;
     */
    function novoSequencialPlanejamento() {
        $sql = "select max(cpldfdsequ) from sfpc.tbplanejamentodfd";
        $retorno = executarSQL($this->conexaoDb, $sql);
        $result = 0;
        $retorno->fetchInto($result, DB_FETCHMODE_OBJECT);
        $cpldfdsequ = $result->max + 1;

        return $cpldfdsequ;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Gera um novo numero sequencial do DFD para orgão e ano;
     */
    function novoSequencialDFD($corglicodi, $apldfdanod) {
        $sql = "select max(cpldfdnumd) from sfpc.tbplanejamentodfd where corglicodi = $corglicodi and apldfdanod = $apldfdanod";
        $retorno = executarSQL($this->conexaoDb, $sql);
        $result = 0;
        $retorno->fetchInto($result, DB_FETCHMODE_OBJECT);
        $cpldfdnumd = $result->max + 1;

        return $cpldfdnumd;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Gera um novo numero sequencial do Histórico da sitação DFD;
     */
    function novoSequencialHistoricoDFD() {
        $sql = "select max(cplhsisequ) from sfpc.tbplanejamentohistoricosituacaodfd";
        $retorno = executarSQL($this->conexaoDb, $sql);
        $result = 0;
        $retorno->fetchInto($result, DB_FETCHMODE_OBJECT);
        $cplhsisequ = $result->max + 1;

        return $cplhsisequ;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Valida os dados a serem inseridos no banco, se houver algo faltando sera montada a reclamação;
     */
    function validarInclusaoDFD($dados) {
        $mensagemErro = "";
        if(empty($dados['selectAnoPCA'])) {
            $mensagemErro .= "Ano PCA, ";
            $dados['selectAnoPCA'] = 'null';
        }
        if($dados['selectAreaReq'] == -1) {
            $mensagemErro .= "Área Requisitante, ";
            $dados['selectAreaReq'] = 'null';
        }

        if(empty($dados['cclamscodi'])) {
            $mensagemErro .= "Código da Classe, ";
        }

        if(empty($dados['descSuDemanda'])) {
            $mensagemErro .= "Descrição Sucinta da Demanda, ";
        }

        if(empty($dados['justContratacao'])) {
            $mensagemErro .= "Justificativa da necessidade de contratação, ";
        }

        if(empty($dados['estValorContratacao'])) {
            $mensagemErro .= "Estimativa preliminar de valor contratação, ";
        }

        if(empty($dados['tpProcContratacao'])) {
            $mensagemErro .= "Tipo de Processo de contratação, ";
        }

        if(empty($dados['dtPretendidaConc'])) {
            $mensagemErro .= "Data pretendida conclusão, ";
        }else{
            $dtpretConc  = explode("/", $dados['dtPretendidaConc']);
            $checaData = checkdate($dtpretConc[1], $dtpretConc[0], $dtpretConc[2]);
            if($checaData == false){
                $mensagemErro .= "Data pretendida conclusão, ";
            }
        }

        if(empty($dados['grauPrioridade'])) {
            $mensagemErro .= "Grau de Prioridade, ";
        }
        
        if(empty($dados['justPriAlta']) && $dados['grauPrioridade'] == "1") {
            $mensagemErro .= "Justificativa para prioridade alta, ";
        }

        // if(empty($dados['vincOutroDFD'])) {
        //     $mensagemErro .= "Vinculação outro DFD";
        // }

        if(empty($dados['contratCorp'])) {
            $mensagemErro .= "Compra Corporativa, ";
        }

        // Realiza a checagem nas configurações antes da inclusão
        $db = Conexao();
        $sql = "SELECT cplcontpmd, fplcontpmd, tplcondtin, tplcondtfi 
                from sfpc.tbplanejamentoconfiguracao 
                where cplconcodi = (select max(cplconcodi) 
                                    from sfpc.tbplanejamentoconfiguracao 
                                    where corglicodi = ".$dados['selectAreaReq']." and aplconanop = ".$dados['selectAnoPCA'].")";
        $result = $db->query($sql);
        $count = $result->numRows();
 
        $Linha = $result->fetchRow();
        $opcaoModificacao   =    $Linha[0];
        $tipoModificacao    =    $Linha[1];
        $dataIni            =    $Linha[2];
        $dataFim            =    $Linha[3];

        if ($count == 0 || $count == NULL){
            $mensagemErro .= "A Área requisitante informada não possui cadastro para o Ano PCA informado, ";
        }

        if ($opcaoModificacao != 1 && $opcaoModificacao!=NULL){
            $mensagemErro .= "A Área requisitante informada não possui cadastro para inclusão no Ano PCA informado, ";
        }

        if ($tipoModificacao != 1 && $tipoModificacao!=NULL){
            $mensagemErro .= "A Área requisitante informada está bloqueada para inclusão no Ano PCA informado, ";
        }

        $dataRegistro = date('Y-m-d');
        if ($dataIni <= $dataRegistro && $dataFim >= $dataRegistro){
            if($mensagemErro == "") {
                $retorno["erro"]     = false;
                $retorno["informe"]  = "";
            }
            
        }else{
            
            $dataIniConvertida = date('d/m/Y',strtotime($dataIni));
            $dataFimConvertida = date('d/m/Y',strtotime($dataFim));
            if($dataIniConvertida != '31/12/1969' && $dataFimConvertida !='31/12/1969'){
                $mensagemErro .= "Cadastro não realizado. Período para cadastro: De $dataIniConvertida a $dataFimConvertida, ";
            }
        }
        
        // Organiza mensagem caso algo esteja faltando;
        if($mensagemErro == "") {
            $retorno["erro"]     = false;
            $retorno["informe"]  = "";
        }else {
            $retorno["erro"] = true;
            $mensagemErro = substr_replace($mensagemErro, '.', strrpos($mensagemErro, ", ")); // Remove a ultima virgula e adiciona o ponto final
            $retorno["informe"]  = "Informe: ".$mensagemErro;
        }

        return $retorno;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Trata os dados antes de colocar na query;
     */
    function trataDadosDFDParaInsert($dados) {

        //Gera numero DFD
        $novoSeqDFD = $this->novoSequencialDFD($dados['selectAreaReq'], $dados["selectAnoPCA"]);
        if(strlen($novoSeqDFD) < 4){
            $quantosZeros = 4 - strlen($novoSeqDFD);
            $cpldfdnumd = "";
            for($i=0; $i<$quantosZeros; $i++){
                $cpldfdnumd .= "0";
            }
            $cpldfdnumd .= $novoSeqDFD;
        }else{
            $cpldfdnumd = $novoSeqDFD;
        }
        $cpldfdnumf ="'".$dados['numDFDParteUm'].".".$cpldfdnumd."/".$dados["selectAnoPCA"]."'";

        //Gera numero Historico
        $cplhsisequ = $this->novoSequencialHistoricoDFD();

        //organizar a data
        $dtpretConc  = explode("/", $dados['dtPretendidaConc']);
        $dpldfdpret = mktime(00,00,00, $dtpretConc[1], $dtpretConc[0], $dtpretConc[2]);        

        // organiza o valor estimado
        $cpldfdvest = str_replace(",", "", $dados['estValorContratacao']);
        $cpldfdvest = str_replace(".", "", $cpldfdvest);

        $dadosTratados['cpldfdsequ'] = $dados['cpldfdsequ']; //Sequencial do DFD vem do banco
        $dadosTratados['apldfdanod'] = $dados["selectAnoPCA"];
        $dadosTratados['cpldfdnumd'] = $novoSeqDFD;
        $dadosTratados['cpldfdnumf'] = $cpldfdnumf; 
        $dadosTratados['corglicodi'] = $dados['selectAreaReq'];
        $dadosTratados['fpldfdcorp'] = "'".$dados['contratCorp']."'";
        // $dadosTratados['apldfdcnpj'] = $dados['cnpjAreaReq'];
        $dadosTratados['cgrumscodi'] = $dados['cgrumscodi']; 
        $dadosTratados['cclamscodi'] = $dados['cclamscodi'];
        $dadosTratados['eclamsdesc'] = "'".$dados['eclamsdesc']."'";//verificar dinamica com servico/material eclamsdesc
        $dadosTratados['epldfddesc'] = "'".strtoupper(RetiraAcentos($this->anti_injection($dados['descSuDemanda'])))."'";
        $dadosTratados['epldfdjust'] = "'".strtoupper(RetiraAcentos($this->anti_injection($dados['justContratacao'])))."'";
        $dadosTratados['cpldfdvest'] = $cpldfdvest;
        $dadosTratados['fpldfdtpct'] = "'".$dados['tpProcContratacao']."'";
        $dadosTratados['dpldfdpret'] = "'".date("Y-m-d", $dpldfdpret)." 00:00:00'"; // data tratada para o tipo Typestamp
        $dadosTratados['fpldfdgrau'] = $dados['grauPrioridade'];
        $dadosTratados['epldfdjusp'] = "'".strtoupper(RetiraAcentos($this->anti_injection($dados['justPriAlta'])))."'";
        $dadosTratados['fpldfdagru'] = "'"."N"."'"; // concatenei para que as aspas entrem na query
        $dadosTratados['tpldfdincl'] = "now()";
        $dadosTratados['cusupocodi'] = $_SESSION['_cusupocodi_'];
        $dadosTratados['tpldfdulat'] = "now()";
        $dadosTratados['cplsitcodi'] = ($dados['rascunho'] == true)? 1:2; // 1 é para rascunho e 0 para Cadastrado;

        //Para o insert do item
        for($i=0;$i<count($dados['cplitecodi']);$i++){
            $dadosTratados['cplitecodi'][] = $dados['cplitecodi'][$i];
            $dadosTratados['cmatepsequ'][] = (!empty($dados['cmatepsequ'][$i]))? $dados['cmatepsequ'][$i]:"null";
            $dadosTratados['cservpsequ'][] = (!empty($dados['cservpsequ'][$i]))? $dados['cservpsequ'][$i]:"null";
        }"'".
        $dadosTratados['tpliteincl'] = "now()";
        $dadosTratados['tpliteulat'] = "now()";

        //Para insert do Histórico
        $dadosTratados['cplhsisequ'] = $cplhsisequ;
        $dadosTratados['eplhsijust'] = "''";
        $dadosTratados['tplhsiincl'] = "now()";
        $dadosTratados['tplhsiulat'] = "now()";

        return $dadosTratados;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php;
     * Monta a query e insere nobanco;
     */
    function insereDFD($dadosDFD) {

        $sqlInsertDFD = "
        insert into sfpc.tbplanejamentodfd (
            cpldfdsequ,
            apldfdanod,
            cpldfdnumd,
            cpldfdnumf,
            corglicodi,
            fpldfdcorp,
            cgrumscodi,
            cclamscodi,
            epldfddesc,
            epldfdjust,
            cpldfdvest,
            fpldfdtpct,
            dpldfdpret,
            fpldfdgrau,
            epldfdjusp,
            fpldfdagru,
            tpldfdincl,
            cusupocodi,
            tpldfdulat,
            cplsitcodi
        ) values(
            ".$dadosDFD['cpldfdsequ'].", 
            ".$dadosDFD['apldfdanod'].", 
            ".$dadosDFD['cpldfdnumd'].", 
            ".$dadosDFD['cpldfdnumf'].", 
            ".$dadosDFD['corglicodi'].", 
            ".$dadosDFD['fpldfdcorp'].", 
            ".$dadosDFD['cgrumscodi'].", 
            ".$dadosDFD['cclamscodi'].", 
            ".$dadosDFD['epldfddesc'].", 
            ".$dadosDFD['epldfdjust'].", 
            ".$dadosDFD['cpldfdvest'].", 
            ".$dadosDFD['fpldfdtpct'].", 
            ".$dadosDFD['dpldfdpret'].", 
            ".$dadosDFD['fpldfdgrau'].", 
            ".$dadosDFD['epldfdjusp'].", 
            ".$dadosDFD['fpldfdagru'].", 
            ".$dadosDFD['tpldfdincl'].", 
            ".$dadosDFD['cusupocodi'].", 
            ".$dadosDFD['tpldfdulat'].", 
            ".$dadosDFD['cplsitcodi']."
            )
        ";
       
        $resultadoDFD = executarSQL($this->conexaoDb, $sqlInsertDFD);

        for($i=0; $i<count($dadosDFD['cplitecodi']); $i++){
            $sqlInsertItem ="
                insert into sfpc.tbitemplanejamentodfd (
                cpldfdsequ,
                cplitecodi,
                cmatepsequ,
                cservpsequ,
                tpliteincl,
                cusupocodi,
                tpliteulat
                ) values(
                ".$dadosDFD['cpldfdsequ'].",
                ".$dadosDFD['cplitecodi'][$i].",
                ".$dadosDFD['cmatepsequ'][$i].",
                ".$dadosDFD['cservpsequ'][$i].",
                ".$dadosDFD['tpliteincl'].",
                ".$dadosDFD['cusupocodi'].",
                ".$dadosDFD['tpliteulat']."
                )
            ";

            
            $resultadoItemDFD = executarSQL($this->conexaoDb, $sqlInsertItem);
        }
        
        $sqlInsertHistorico ="
            insert into sfpc.tbplanejamentohistoricosituacaodfd 
            (
                cplhsisequ, 
                cpldfdsequ,	
                cplsitcodi,	
                eplhsijust,	
                tplhsiincl,	
                cusupocodi,	
                tplhsiulat
            ) values ( 
                ".$dadosDFD['cplhsisequ'].",
                ".$dadosDFD['cpldfdsequ'].",
                ".$dadosDFD['cplsitcodi'].",
                ".$dadosDFD['eplhsijust'].",
                ".$dadosDFD['tplhsiincl'].",
                ".$dadosDFD['cusupocodi'].",
                ".$dadosDFD['tplhsiulat']."
            )
        ";
        $resultadoItemDFD = executarSQL($this->conexaoDb, $sqlInsertHistorico);
       

        return true;


    }

    /**
     * Função utilizada em ConsPesquisarDFD.php, CadManterDFD;
     * Pega todos os dados do DFD;
     */
    public function getDadosDFD($dados)
    {
        // fazer dessa fforma vai dar uma sobrecarga na pesquisa, é mais rápido fazer uma sql modulável;
        $sql = "
            SELECT distinct plandfd.*, org.eorglidesc as descorgao, classe.eclamsdesc as descclasse, sitdfd.eplsitnome
            FROM sfpc.tbplanejamentodfd AS plandfd
            inner join sfpc.tborgaolicitante as org on org.corglicodi = plandfd.corglicodi
            inner join sfpc.tbclassematerialservico as classe on (classe.cclamscodi = plandfd.cclamscodi and classe.cgrumscodi = plandfd.cgrumscodi) 
            inner join sfpc.tbplanejamentosituacaodfd as sitdfd on sitdfd.cplsitcodi = plandfd.cplsitcodi
        ";
        
        $sqlWhere = "";
        $checaWhere = false;//se for falso nas verificações precisa incluir o where
        if(!empty($dados['selectAreaReq'])){
            $sqlWhere .= " where"; // não precisa verificar pois não vem nada antes
            $sqlWhere .= " plandfd.corglicodi = '".$dados['selectAreaReq']."' and";//não pode ter espaço após para garantir na checagem para não faltar where
            $checaWhere = true;
        }

        //Verifica e implenta se vier o id da DFD
        if(!empty($dados['idDFD'])) {
            if($checaWhere == false){
                $sqlWhere .= " where"; // não recebe a chave pois caso venha não vem mais nada após
            }
            $sqlWhere .=" plandfd.cpldfdnumf = '".$dados['idDFD']."'";
        } else { //Caso não venha as outras informações serão tratadas
            if (!empty($dados["cclamscodi"]) && !empty($dados["cgrumscodi"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " classe.cclamscodi = '".$dados['cclamscodi']."' and classe.cgrumscodi = '".$dados['cgrumscodi']."' and";
            }
            if (!empty($dados["selectAnoPCA"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " plandfd.apldfdanod = '".$dados['selectAnoPCA']."' and";
            }

            if (!empty($dados["selectSitDFD"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " plandfd.cplsitcodi = '".$dados['selectSitDFD']."' and";
            }

            if (!empty($dados["grauPrioridade"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " plandfd.fpldfdgrau = '".$dados['grauPrioridade']."' and";
            }

            if (!empty($dados["descDemanda"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " plandfd.epldfddesc = '".$dados['descDemanda']."' and";
            }

            if (!empty($dados["DataIni"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                    $checaWhere = true;
                }
                $sqlWhere .= " plandfd.tpldfdincl = '".$dados['DataIni']."' and";
            }

            if (!empty($dados["DataFim"])) {
                if($checaWhere == false){
                    $sqlWhere .= " where";
                }
                $sqlWhere .= " plandfd.dpldfdpret = '".$dados['DataFim']."' and";
            }
            //limpa o ultimo and para não quebrar a query
            $sqlWhere = substr_replace($sqlWhere, ' ', strrpos($sqlWhere, " and"));
            
        }
        $sql .= $sqlWhere;
        $sql .= " ORDER BY cpldfdsequ ASC";
        
        $resultado = executarSql($this->conexaoDb, $sql);
        $dadosSelectDFD = array();
        $countDFD = 0;
        
        while ($resultado->fetchInto($countDFD, DB_FETCHMODE_OBJECT)) {
            $dadosSelectDFD[] = $countDFD;
        }
        
        return $dadosSelectDFD;
    }
    /**
     * Função utilizada em ConsPesquisarDFD.php, 
     * Pega todos os dados do DFD encontrados e monta o sql para a página;
     */
    public function montaHTML($dadosDFD)
    {   
        if(empty($dadosDFD)){
            $html = '<tr>
                    <td align="center" bgcolor="#75ADE6" colspan="8" class="titulo3" width="900px">
                            Resultado da pesquisa
                        </td>
                    </tr>
                    <tr>
                        <td align="center" colspan="8" class="titulo3" width="900px">Pesquisa sem ocorrências.</td>
                    </tr>';
        }else{
                $html='
                        <tr>
                            <td align="center" bgcolor="#75ADE6" colspan="8" class="titulo3">
                                Resultado da pesquisa
                            </td>
                        </tr>';
            
    
                $html.='<tr><td align="center" bgcolor="#BFDAF2" colspan="8" class="titulo3">'.$dadosDFD[0]->descorgao.'</td></tr>';
                
                $html.='<tr>
                        <td>
                        <table class="tablePesquisa textonormal" style=" position:relative;  width : 100%; ">
                        <thead>
                            <tr id="cabecalhos">
                                <td class="tdResultTitulo" id="cabIdDFD">Número do DFD</td>
                                <td class="tdResultTitulo" id="cabAno">Ano do PCA</td>
                                <td class="tdResultTitulo" id="cabCodClasse">Código da Classe</td>
                                <td class="tdResultTitulo" id="cabDescClasse">Descrição da Classe</td>
                                <td class="tdResultTitulo" id="cabDataPrevistaConclusao">Data Prevista para Conclusão</td>
                                <td class="tdResultTitulo" id="cabTpProcesso">Tipo de Processo</td>
                                <td class="tdResultTitulo" id="cabGrauPrioridade">Grau de Prioridade</td>
                                <td class="tdResultTitulo" id="cabSituacao">Situação do DFD</td>
                            </tr>
                        </thead>
                        <tbody>';

                
                foreach($dadosDFD as $dado){
                    $dataPrevConclusao = date('d/m/Y', strtotime($dado->dpldfdpret));
                    $tpProcesso = ($dado->fpldfdtpct=="D")? "Contratação Direta" : "Licitação";
                    $urlDFD = "ConsDFD.php?dfdSelected=$dado->cpldfdnumf";

                    if($dado->fpldfdgrau == 1){
                        $grauprioridade = "ALTO";
                    }else if($grauprioridade == 2){
                        $grauprioridade = "MÉDIO";
                    }else if($grauprioridade == 3){
                        $grauprioridade = "BAIXO";
                    }

                    
                    $html.='<tr id="resultados">
                        <td class="tdresult" id="resIdDFD"><a href="'.$urlDFD.'" style="text-transform: capitalize">'.$dado->cpldfdnumf.'</a></td>
                        <td class="tdresult" id="resAno">'.$dado->apldfdanod.'</td>
                        <td class="tdresult" id="resCodClasse">'.$dado->cclamscodi.'</td>
                        <td class="tdresult" id="resDescClasse">'.$dado->descclasse.'</td>
                        <td class="tdresult" id="resDataPrevistaConclusao">'.$dataPrevConclusao.'</td>
                        <td class="tdresult" id="resTpProcesso">'.strtoUpper2($tpProcesso).'</td>
                        <td class="tdresult" id="resGrauPrioridade">'.$grauprioridade.'</td>
                        <td class="tdresult" id="resSituacao">'.$dado->eplsitnome.'</td>
                    </tr>';
                }
                $html .= '</tbody></table></td></tr>';
        }
        return $html;
    }
    /**
     * Função utilizada em ConsSelecionarManterDFD.php, 
     * Pega todos os dados do DFD encontrados e monta o sql para a página;
     */
    public function montaHTMLManter($dadosDFD)
    {   
        if(empty($dadosDFD)){
            $html = '<tr>
                    <td align="center" bgcolor="#75ADE6" colspan="8" class="titulo3" width="900px">
                            Resultado da pesquisa
                        </td>
                    </tr>
                    <tr>
                        <td align="center" colspan="8" class="titulo3" width="900px">Pesquisa sem ocorrências.</td>
                    </tr>';
        }else{
                $html='
                        <tr>
                            <td align="center" bgcolor="#75ADE6" colspan="8" class="titulo3">
                                Resultado da pesquisa
                            </td>
                        </tr>';
            
    
                $html.='<tr><td align="center" bgcolor="#BFDAF2" colspan="8" class="titulo3">'.$dadosDFD[0]->descorgao.'</td></tr>';
                
                $html.='<tr>
                        <td>
                        <table class="tablePesquisa textonormal" style=" position:relative;  width : 100%; ">
                        <thead>
                            <tr id="cabecalhos">
                                <td class="tdResultTitulo" id="cabIdDFD">Numero do DFD</td>
                                <td class="tdResultTitulo" id="cabAno">Ano do PCA</td>
                                <td class="tdResultTitulo" id="cabCodClasse">Código da Classe</td>
                                <td class="tdResultTitulo" id="cabDescClasse">Descrição da Classe</td>
                                <td class="tdResultTitulo" id="cabDataPrevistaConclusao">Data Prevista para Conclusão</td>
                                <td class="tdResultTitulo" id="cabTpProcesso">Tipo de Processo</td>
                                <td class="tdResultTitulo" id="cabGrauPrioridade">Grau de Prioridade</td>
                                <td class="tdResultTitulo" id="cabSituacao">Situação do DFD</td>
                            </tr>
                        </thead>
                        <tbody>';

                
                foreach($dadosDFD as $dado){
                    $dataPrevConclusao = date('d/m/Y', strtotime($dado->dpldfdpret));
                    $tpProcesso = ($dado->fpldfdtpct=="D")? "Contratação Direta" : "Licitação";
                    $urlDFD = "CadManterDFD.php?dfdSelected=$dado->cpldfdnumf";

                    if($dado->fpldfdgrau == 1){
                        $grauprioridade = "ALTO";
                    }else if($grauprioridade == 2){
                        $grauprioridade = "MÉDIO";
                    }else if($grauprioridade == 3){
                        $grauprioridade = "BAIXO";
                    }

                    
                    $html.='<tr id="resultados">
                        <td class="tdresult" id="resIdDFD"><a href="'.$urlDFD.'" style="text-transform: capitalize">'.$dado->cpldfdnumf.'</a></td>
                        <td class="tdresult" id="resAno">'.$dado->apldfdanod.'</td>
                        <td class="tdresult" id="resCodClasse">'.$dado->cclamscodi.'</td>
                        <td class="tdresult" id="resDescClasse">'.$dado->descclasse.'</td>
                        <td class="tdresult" id="resDataPrevistaConclusao">'.$dataPrevConclusao.'</td>
                        <td class="tdresult" id="resTpProcesso">'.$tpProcesso.'</td>
                        <td class="tdresult" id="resGrauPrioridade">'.$grauprioridade.'</td>
                        <td class="tdresult" id="resSituacao">'.$dado->eplsitnome.'</td>
                    </tr>';
                }
                $html .= '</tbody></table></td></tr>';
        }
        return $html;
    }

    /**
     * Função utilizada em AbaInformacoesDFD.php
     * Busca os anos da DFD para dispor no select da pesquisa
     */
    function getAnosCadastrados(){
        $sql = "SELECT distinct apldfdanod FROM sfpc.tbplanejamentodfd ";
                
        $resultado = executarSql($this->conexaoDb, $sql);
        $dadosSelectDFD = array();
        
        while ($resultado->fetchInto($result, DB_FETCHMODE_OBJECT)) {
            $dadosSelectDFD[] = $result;
        }
        
        return $dadosSelectDFD;
    }
    /**
     * Função utilizada em AbaInformacoesDFD.php
     * Busca os dados da DFD para dispor em tela
     */
    function consultaDFD($cpldfdnumf){
        $sql = "SELECT dfd.*, org.eorglidesc as descorgao, org.aorglicnpj as cnpjorgao, classe.eclamsdesc as descclasse, sitdfd.eplsitnome, usup.eusuporesp 
                FROM sfpc.tbplanejamentodfd as dfd
                inner join sfpc.tborgaolicitante as org on org.corglicodi = dfd.corglicodi
                inner join sfpc.tbclassematerialservico as classe on (classe.cclamscodi = dfd.cclamscodi and classe.cgrumscodi = dfd.cgrumscodi) 
                inner join sfpc.tbplanejamentosituacaodfd as sitdfd on sitdfd.cplsitcodi = dfd.cplsitcodi
                inner join sfpc.tbusuarioportal as usup on usup.cusupocodi = dfd.cusupocodi
                where dfd.cpldfdnumf = '$cpldfdnumf'";
                
        $resultado = executarSql($this->conexaoDb, $sql);
        $resultado->fetchInto($retorno, DB_FETCHMODE_OBJECT);
        
        return $retorno;
    }
    /**
     * Função utilizada em AbaHistoricoDFD.php
     * Busca os dados do histórico do DFD para dispor em tela
     */
    function consultaHistorico($cpldfdnumf){
        $sql = "SELECT hist.*, usup.eusuporesp, sitdfd.eplsitnome
                FROM sfpc.tbplanejamentohistoricosituacaodfd as hist 
                inner join sfpc.tbplanejamentodfd as dfd on dfd.cpldfdsequ = hist.cpldfdsequ
                inner join sfpc.tbusuarioportal as usup on usup.cusupocodi = dfd.cusupocodi
                inner join sfpc.tbplanejamentosituacaodfd as sitdfd on sitdfd.cplsitcodi = dfd.cplsitcodi
                where dfd.cpldfdnumf =  '$cpldfdnumf'";
                
        $resultado = executarSql($this->conexaoDb, $sql);
        $dadosHistDFD = array();
        
        while ($resultado->fetchInto($result, DB_FETCHMODE_OBJECT)) {
            $dadosHistDFD[] = $result;
        }
        return $dadosHistDFD;
    }
    /**
     * Função utilizada em AbaHistoricoDFD.php
     * Busca os dados dos itens do DFD
     */
    function consultaItens($cpldfdnumf){
        $sql = "SELECT item.*,  mat.ematepdesc, serv.eservpdesc 
                FROM sfpc.tbitemplanejamentodfd item
                inner join sfpc.tbplanejamentodfd as dfd on dfd.cpldfdsequ = item.cpldfdsequ
                left join sfpc.tbmaterialportal as mat on mat.cmatepsequ = item.cmatepsequ
                left join sfpc.tbservicoportal as serv on serv.cservpsequ = item.cservpsequ 
                where dfd.cpldfdnumf =  '$cpldfdnumf'";
                
        $resultado = executarSql($this->conexaoDb, $sql);
        $dadosItensDFD = array();
        
        while ($resultado->fetchInto($result, DB_FETCHMODE_OBJECT)) {
            $dadosItensDFD[] = $result;
        }
        return $dadosItensDFD;
    }
    /**
     * Função utilizada na função updateitensDFD()
     * Busca o maior seq DFD para gerar um novo
     */
    function maxSeqItem($cpldfdsequ){
        $sql = "SELECT max(cplitecodi) from sfpc.tbitemplanejamentodfd where cpldfdsequ = '$cpldfdsequ'";
                
        $resultado = executarSql($this->conexaoDb, $sql);
        $dadosItensDFD = array();
        
        $resultado->fetchInto($result, DB_FETCHMODE_OBJECT);
        return $result->max;
    }
    /**
     * Função utilizada em CadManterDFD.php
     * Deleta os dados do DFD
     */
    function deleteDadosDFD($cpldfdsequ){
        $sql = "Delete FROM sfpc.tbplanejamentohistoricosituacaodfd where cpldfdsequ = $cpldfdsequ";
        executarSql($this->conexaoDb, $sql);
        $sql = "Delete FROM sfpc.tbitemplanejamentodfd where cpldfdsequ = $cpldfdsequ";
        executarSql($this->conexaoDb, $sql);
        $sql = "Delete FROM sfpc.tbplanejamentodfd where cpldfdsequ = $cpldfdsequ";
        executarSql($this->conexaoDb, $sql);
        
        return true;
    }
    /**
     * Função utilizada em CadManterDFD.php
     * Atualiza os dados do DFD na tabela
     */
    function updateDFD($dadosDFD){
        //Monta sql Update DFD
        $sqlPDFD = " update sfpc.tbplanejamentodfd set ";
        $sqlPDFD .=" epldfddesc = '".$dadosDFD->epldfddesc."', ";
        $sqlPDFD .=" epldfdjust = '".$dadosDFD->epldfdjust."', ";
        $sqlPDFD .=" cpldfdvest =  ".$dadosDFD->cpldfdvest.", ";
        $sqlPDFD .=" fpldfdtpct = '".$dadosDFD->fpldfdtpct."', ";
        $sqlPDFD .=" fpldfdgrau = '".$dadosDFD->fpldfdgrau."', ";
        $sqlPDFD .=" epldfdjusp = '".$dadosDFD->epldfdjusp."', ";
        $sqlPDFD .=" dpldfdpret =  '".date("Y-m-d", $dadosDFD->dpldfdpret)." 00:00:00', "; // data tratada para o tipo Typestamp
        $sqlPDFD .=" fpldfdcorp = '".$dadosDFD->fpldfdcorp."', ";
        $sqlPDFD .=" cusupocodi = ".$_SESSION['_cusupocodi_'].", ";
        $sqlPDFD .=" tpldfdulat = now() ";
        $sqlPDFD .=" where cpldfdsequ = ".$dadosDFD->cpldfdsequ;
        //Executa Query
        executarSql($this->conexaoDb, $sqlPDFD);
        
        return true;
    }
    /**
     * Função utilizada em CadManterDFD.php
     * Atualiza os dados dos itens do DFD na tabela
     */
    function updateitensDFD($itensDFD, $cpldfdsequ){
        $cplitecodi = 0;
        foreach($itensDFD as $item){
            $cplitecodi++;
            if($item->remover == true){
                //Monta sql delete DFD para servico ou material
                if(!empty($item->cmatepsequ) and !empty($cpldfdsequ)){
                    $sqlItemDelete = "Delete FROM sfpc.tbitemplanejamentodfd where cpldfdsequ = $cpldfdsequ and cmatepsequ = ".$item->cmatepsequ;
                    executarSql($this->conexaoDb, $sqlItemDelete);
                }
                if(!empty($item->cservpsequ) and !empty($cpldfdsequ)){
                    $sqlItemDelete = "Delete FROM sfpc.tbitemplanejamentodfd where cpldfdsequ = $cpldfdsequ and  cservpsequ = ".$item->cservpsequ;
                    executarSql($this->conexaoDb, $sqlItemDelete);
                }
                //Executa Query
                
            }
            $maxSeqItem = $this->maxSeqItem($cpldfdsequ);
            $cplitecodi = intval($maxSeqItem) + 1;
            if($item->Novo == true){
                $cmatepsequ = !empty($item->cmatepsequ)?$item->cmatepsequ : "null" ;
                $cservpsequ = !empty($item->cservpsequ)?$item->cservpsequ : "null" ;
                $sqlInsertItem = "insert into sfpc.tbitemplanejamentodfd (
                                    cpldfdsequ,
                                    cplitecodi,
                                    cmatepsequ,
                                    cservpsequ,
                                    tpliteincl,
                                    cusupocodi,
                                    tpliteulat
                                    ) values(
                                    $cpldfdsequ,
                                    $cplitecodi,
                                    $cmatepsequ,
                                    $cservpsequ,
                                    now(),
                                    ".$_SESSION['_cusupocodi_'].",
                                    now()
                                    )";

                executarSql($this->conexaoDb, $sqlInsertItem);
            }
        }
        
        return true;
    }

}
?>
